name: CI

on:
  pull_request:
    branches: [main, develop]

jobs:
  test:
    runs-on: ubuntu-latest
    environment: 'Development' 
    
    strategy:
      matrix:
        node-version: ['20.x']
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: test_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: |
            npm ci
            npm install -g dotenv-cli

      - name: Create .env file for tests
        run: |
          cat > .env.development << EOF
          SUPABASE_URL=postgresql://postgres:postgres@localhost:5432/test_db
          SUPABASE_DIRECT_URL=postgresql://postgres:postgres@localhost:5432/test_db
          SUPABASE_AUTH_URL=${{ secrets.SUPABASE_AUTH_URL }}
          SUPABASE_API_KEY=${{ secrets.SUPABASE_API_KEY }}
          EOF

      - name: Generate Prisma client
        run: |
            npm run prisma:generate:dev


      - name: Run database migrations
        run: |
            npm run prisma:migrate:dev
          
      - name: Run database seed
        run: |
            npm run seed:dev:up

      - name: Run unit tests
        run: npm run test

      - name: Run e2e tests
        run: npm run test:e2e

      - name: Build application
        run: npm run build

  security:
    runs-on: ubuntu-latest
    needs: test
    
    strategy:
      matrix:
        node-version: ['20.x']

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run security audit
        run: npm audit --audit-level moderate

    #   - name: Run Snyk security scan
    #     uses: snyk/actions/node@master
    #     env:
    #       SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
    #     with:
    #       args: --severity-threshold=high

  code-quality:
    runs-on: ubuntu-latest
    needs: test
    
    strategy:
      matrix:
        node-version: ['20.x']

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run Prettier check
        run: npx prettier --check "src/**/*.ts" "test/**/*.ts"

      - name: Run ESLint
        run: npm run lint

      - name: Check TypeScript compilation
        run: npx tsc --noEmit

  dependency-review:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Dependency Review
        uses: actions/dependency-review-action@v4
        with:
          fail-on-severity: moderate 